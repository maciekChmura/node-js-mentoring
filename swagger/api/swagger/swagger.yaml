swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /cities:
    # our controller name
    x-swagger-router-controller: cities
    get:
      description: get the cities array
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCitiesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: post a city
      parameters:
      - in: body
        name: city
        description: the city to create
        schema:
          $ref: "#/definitions/PostCitySchema"
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostCityResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /cities/{id}:
  # our controller name
    x-swagger-router-controller: cities
    delete:
      description: delete a city
      parameters:
      - in: path
        name: id
        description: id of city to delete
        type: string
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: put a city
      parameters:
      - in: path
        name: id
        description: id of the city to update
        type: string
        required: true
      - in: body
        name: city
        description: new city data
        schema:
          $ref: "#/definitions/PostCitySchema"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products:
    # our controller name
    x-swagger-router-controller: products
    get:
      description: get the products array
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProductsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: post a product
      parameters:
      - in: body
        name: product
        description: the product to create
        schema:
          $ref: "#/definitions/PostProductSchema"
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostProductResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products/{id}:
    # our controller name
    x-swagger-router-controller: products
    get:
      description: get the product
      # define the type of response for Success "200" and Error
      parameters:
      - in: path
        name: id
        description: id of product to get
        type: string
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProductsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: get the users array
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: post a user
      parameters:
      - in: body
        name: user
        description: the user to create
        schema:
          $ref: "#/definitions/PostUserSchema"
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: get the user
      # define the type of response for Success "200" and Error
      parameters:
      - in: path
        name: id
        description: id of user to get
        type: string
        required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
# Cities
  PostCitySchema:
    type: object
    properties:
      country:
        type: string
      name:
        type: string
      capital:
        type: boolean
      location:
        type: object
        properties:
          lat: 
            type: string
          lng:
            type: string
  GetCitiesResponse:
    required:
      - cities
    properties:
      # The array of cities
      cities:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            country:
              type: string
            name:
              type: string
            capital:
              type: boolean
            location:
              type: object
              properties:
                lat: 
                  type: string
                lng:
                  type: string
  PostCityResponse:
    type: object
    properties:
      id:
        type: string
      country:
        type: string
      name:
        type: string
      capital:
        type: boolean
      location:
        type: object
        properties:
          lat: 
            type: string
          lng:
              type: string
# Products
  PostProductSchema:
    type: object
    properties:
      name:
        type: string
      weight:
        type: string
  GetProductsResponse:
    required:
      - products
    properties:
      # The array of products
      products:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            weight:
              type: string
  PostProductResponse:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      weight:
        type: string
# Users
  PostUserSchema:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
  GetUsersResponse:
    required:
      - products
    properties:
      # The array of products
      products:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
  PostUserResponse:
    type: object
    properties:
      id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
# default
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
